%import common.WS
%import common.SH_COMMENT
%ignore WS
%declare _INDENT _DEDENT

program: (_NL | function)*
block: _NL* _INDENT statements+ _NL* _DEDENT

function: "func" ID parameters_def ("->" type)? "{" block "}"
parameters_def: "(" parameters_def_list? ")"
parameters_def_list: parameter_def ("," parameter_def)*
parameter_def: type ID

function_call: ID "(" parameters ")"
parameters: log_expr ("," log_expr)*

statements: _NL*(function | structures | declarations | assign_expr | function_call | return_) _NL*
variable: type ID ("=" log_expr)?
expression: assign_expr | value
assign_expr: ID "=" log_expr
structures: struct
array: type "[" LITERAL_INT? "]" ID ("=" "{" array_list "}")?
array_list: literal ("," literal)*
return_: "return" log_expr
declarations: variable | array

struct: struct_cond | struct_rep
struct_rep: for_ | while
for_: "for" "(" variable ";" log_expr+ ";" (increm_decrem | expr) ")" "{" block "}"
while: "while" "(" log_expr+ ")" "{" block "}"
struct_cond: "if" "(" log_expr+ ")" "{" block "}" elif_* else_?
elif_: "elif" "(" log_expr+ ")" "{" block "}"
else_: "else" "{" block "}"

increm_decrem: ID "++" | ID "--"

EQ: "=="
NEQ: "!=" | "<>"
GT: ">"
GTE: ">="
LT: "<"
LTE: "<="
PLUS: "+"
MINUS: "-"
STAR: "*"
SLASH: "/"
PERCENT: "%"

rel_expr: expr (EQ | NEQ | GT | GTE | LT | LTE) expr | expr
log_expr: rel_expr ("&&" | "||") rel_expr | rel_expr
expr: term (PLUS | MINUS) term | term
term: factor (STAR | SLASH | PERCENT) factor | factor

factor: value | "(" log_expr ")"

value: ID | literal | increm_decrem

literal: LITERAL_INT | LITERAL_FLOAT | LITERAL_CHAR | LITERAL_BOOLEAN | LITERAL_STRING
LITERAL_INT: /-?[0-9]+/
LITERAL_FLOAT: "-"? LITERAL_INT "." LITERAL_INT
LITERAL_CHAR: /'.'/
LITERAL_BOOLEAN: "true" | "false"
LITERAL_STRING: /"([^"\\]|\\.)*"/

type: TYPE_INT | TYPE_FLOAT | TYPE_CHAR | TYPE_BOOLEAN | TYPE_STRING | TYPE_VOID
TYPE_INT: "int"
TYPE_FLOAT: "float"
TYPE_CHAR: "char"
TYPE_BOOLEAN: "bool"
TYPE_STRING: "str"
TYPE_VOID: "void"

ID : /[a-zA-Z_][a-zA-Z_0-9]*/
_NL: (/\r?\n[\t ]*/ | SH_COMMENT)+
